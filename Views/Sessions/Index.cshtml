@model IEnumerable<StudyGroups.Models.Session>
@{
    ViewBag.Title = "Sessions";
    int? currentUserID = Session["UserID"] as int?;
    string searchString = ViewBag.SearchString;
    int? studyGroupId = ViewBag.StudyGroupId;
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    int totalItems = ViewBag.TotalItems ?? 0;
}

<h2>Upcoming Sessions</h2>

@* Display success/error messages *@
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

@* Search and Filter Form *@
<div style="margin-bottom: 20px;">
    @using (Html.BeginForm("Index", "Sessions", FormMethod.Get, new { @class = "form-inline" }))
    {
        <div class="form-group" style="margin-right: 10px;">
            <input type="text"
                   name="searchString"
                   value="@searchString"
                   class="form-control"
                   placeholder="Search by study group, subject, or creator..."
                   style="width: 350px;" />
        </div>

        <div class="form-group" style="margin-right: 10px;">
            @Html.DropDownList("studyGroupId", (SelectList)ViewBag.StudyGroups, "All Study Groups", new { @class = "form-control", style = "width: 200px;" })
        </div>

        <button type="submit" class="btn btn-default">
            <span class="glyphicon glyphicon-search"></span> Search
        </button>

        if (!String.IsNullOrEmpty(searchString) || (studyGroupId.HasValue && studyGroupId.Value > 0))
        {
            @Html.ActionLink("Clear Filters", "Index", null, new { @class = "btn btn-link" })
        }
    }
</div>

@if (Session["UserID"] != null && Session["UserRole"]?.ToString() == "User")
{
    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    </p>
}

@* Results Summary *@
<div style="margin-bottom: 10px;">
    <strong>Showing @Model.Count() of @totalItems upcoming sessions</strong>
</div>

<table class="table">
    <tr>
        <th>Creator</th>
        <th>Study Group</th>
        <th>Date</th>
        <th>Duration</th>
        <th>Attendees</th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        bool isCreator = currentUserID.HasValue && item.CreatorUserID == currentUserID.Value;
        bool isAttending = currentUserID.HasValue && item.Attendees != null && item.Attendees.Any(a => a.UserID == currentUserID.Value);
        bool isFull = item.Attendees != null && item.Attendees.Count >= item.MaxAttendees;

        <tr>
            <td>@Html.DisplayFor(modelItem => item.Creator.FirstName)</td>
            <td>@Html.DisplayFor(modelItem => item.StudyGroup.Name)</td>
            <td>@item.Date.ToString("MM/dd/yyyy HH:mm")</td>
            <td>@Html.DisplayFor(modelItem => item.Duration) min</td>
            <td>@(item.Attendees?.Count ?? 0) / @item.MaxAttendees</td>
            <td>
                @if (currentUserID.HasValue)
                {
                    if (isCreator)
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.SessionID })
                        <text> | </text>
                        @Html.ActionLink("Delete", "Delete", new { id = item.SessionID })
                        <text> | </text>
                        @Html.ActionLink("Details", "Details", new { id = item.SessionID })
                    }
                    else if (isAttending)
                    {
                        using (Html.BeginForm("Leave", "Sessions", new { id = item.SessionID }, FormMethod.Post, new { style = "display:inline;" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-link" style="padding:0;vertical-align:baseline;" onclick="return confirm('Are you sure you want to leave this session?');">Leave</button>
                        }
                        <text> | </text>
                        @Html.ActionLink("Details", "Details", new { id = item.SessionID })
                    }
                    else if (isFull)
                    {
                        <span class="text-muted">Full</span>
                        <text> | </text>
                        @Html.ActionLink("Details", "Details", new { id = item.SessionID })
                    }
                    else
                    {
                        using (Html.BeginForm("Join", "Sessions", new { id = item.SessionID }, FormMethod.Post, new { style = "display:inline;" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-link" style="padding:0;vertical-align:baseline;">Join</button>
                        }
                        <text> | </text>
                        @Html.ActionLink("Details", "Details", new { id = item.SessionID })
                    }
                }
            </td>
        </tr>
    }
</table>

@* Pagination *@
@if (totalPages > 1)
{
    <div class="text-center">
        <ul class="pagination">
            @* Previous Button *@
            <li class="@(currentPage == 1 ? "disabled" : "")">
                @if (currentPage == 1)
                {
                    <span>&laquo; Previous</span>
                }
                else
                {
                    @Html.ActionLink("« Previous", "Index", new { page = currentPage - 1, searchString = searchString, studyGroupId = studyGroupId })
                }
            </li>

            @* Page Numbers *@
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="@(i == currentPage ? "active" : "")">
                    @Html.ActionLink(i.ToString(), "Index", new { page = i, searchString = searchString, studyGroupId = studyGroupId })
                </li>
            }

            @* Next Button *@
            <li class="@(currentPage == totalPages ? "disabled" : "")">
                @if (currentPage == totalPages)
                {
                    <span>Next &raquo;</span>
                }
                else
                {
                    @Html.ActionLink("Next »", "Index", new { page = currentPage + 1, searchString = searchString, studyGroupId = studyGroupId })
                }
            </li>
        </ul>
    </div>
}

@if (totalItems == 0)
{
    <div class="alert alert-info">
        <strong>No upcoming sessions found.</strong>
        @if (!String.IsNullOrEmpty(searchString) || (studyGroupId.HasValue && studyGroupId.Value > 0))
        {
            <text>Try adjusting your filters.</text>
        }
        else
        {
            <text>Create a new session to get started!</text>
        }
    </div>
}