@model StudyGroups.Models.StudyGroup
@{
    ViewBag.Title = "Create Study Group";
    bool isSubjectLocked = ViewBag.IsSubjectLocked != null && (bool)ViewBag.IsSubjectLocked;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8">

            <h2 class="mb-4">Create Study Group</h2>

            @if (ViewBag.SubjectTitle != null)
            {
                <div class="alert alert-info" role="alert">
                    Creating study group for: <strong>@ViewBag.SubjectTitle</strong>
                </div>
            }

            <div class="card shadow-sm border-0">
                <div class="card-body">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Name, new { @class = "form-label" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger small" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Description, new { @class = "form-label" })
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4 })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger small" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.SubjectID, "Subject", new { @class = "form-label" })
                            @if (isSubjectLocked)
                            {
                                <p class="form-control-static mb-0">@ViewBag.SubjectTitle</p>
                                @Html.HiddenFor(model => model.SubjectID)
                            }
                            else
                            {
                                @Html.DropDownList("SubjectID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger small" })
                            }
                        </div>

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary">Create</button>
                            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-outline-secondary" })
                        </div>
                    }

                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}